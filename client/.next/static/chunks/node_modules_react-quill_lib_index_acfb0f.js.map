{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/OneDrive/Desktop/Next-Level-Technology/Assingment/Assingment6/client/node_modules/react-quill/src/index.tsx"],"sourcesContent":["/*\nReact-Quill\nhttps://github.com/zenoamaro/react-quill\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport isEqual from 'lodash/isEqual';\n\nimport Quill, {\n  QuillOptionsStatic,\n  DeltaStatic,\n  RangeStatic,\n  BoundsStatic,\n  StringMap,\n  Sources,\n} from 'quill';\n\n// Merged namespace hack to export types along with default object\n// See: https://github.com/Microsoft/TypeScript/issues/2719\nnamespace ReactQuill {\n  export type Value = string | DeltaStatic;\n  export type Range = RangeStatic | null;\n\n  export interface QuillOptions extends QuillOptionsStatic {\n    tabIndex?: number,\n  }\n\n  export interface ReactQuillProps {\n    bounds?: string | HTMLElement,\n    children?: React.ReactElement<any>,\n    className?: string,\n    defaultValue?: Value,\n    formats?: string[],\n    id?: string,\n    modules?: StringMap,\n    onChange?(\n      value: string,\n      delta: DeltaStatic,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onChangeSelection?(\n      selection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onFocus?(\n      selection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onBlur?(\n      previousSelection: Range,\n      source: Sources,\n      editor: UnprivilegedEditor,\n    ): void,\n    onKeyDown?: React.EventHandler<any>,\n    onKeyPress?: React.EventHandler<any>,\n    onKeyUp?: React.EventHandler<any>,\n    placeholder?: string,\n    preserveWhitespace?: boolean,\n    readOnly?: boolean,\n    scrollingContainer?: string | HTMLElement,\n    style?: React.CSSProperties,\n    tabIndex?: number,\n    theme?: string,\n    value?: Value,\n  }\n\n  export interface UnprivilegedEditor {\n    getLength(): number;\n    getText(index?: number, length?: number): string;\n    getHTML(): string;\n    getBounds(index: number, length?: number): BoundsStatic;\n    getSelection(focus?: boolean): RangeStatic;\n    getContents(index?: number, length?: number): DeltaStatic;\n  }\n}\n\n// Re-import everything from namespace into scope for comfort\nimport Value = ReactQuill.Value;\nimport Range = ReactQuill.Range;\nimport QuillOptions = ReactQuill.QuillOptions;\nimport ReactQuillProps = ReactQuill.ReactQuillProps;\nimport UnprivilegedEditor = ReactQuill.UnprivilegedEditor;\n\ninterface ReactQuillState {\n  generation: number,\n}\n\nclass ReactQuill extends React.Component<ReactQuillProps, ReactQuillState> {\n\n  static displayName = 'React Quill'\n\n  /*\n  Export Quill to be able to call `register`\n  */\n  static Quill = Quill;\n\n  /*\n  Changing one of these props should cause a full re-render and a\n  re-instantiation of the Quill editor.\n  */\n  dirtyProps: (keyof ReactQuillProps)[] = [\n    'modules',\n    'formats',\n    'bounds',\n    'theme',\n    'children',\n  ]\n\n  /*\n  Changing one of these props should cause a regular update. These are mostly\n  props that act on the container, rather than the quillized editing area.\n  */\n  cleanProps: (keyof ReactQuillProps)[] = [\n    'id',\n    'className',\n    'style',\n    'placeholder',\n    'tabIndex',\n    'onChange',\n    'onChangeSelection',\n    'onFocus',\n    'onBlur',\n    'onKeyPress',\n    'onKeyDown',\n    'onKeyUp',\n  ]\n\n  static defaultProps = {\n    theme: 'snow',\n    modules: {},\n    readOnly: false,\n  }\n\n  state: ReactQuillState = {\n    generation: 0,\n  }\n\n  /*\n  The Quill Editor instance.\n  */\n  editor?: Quill\n\n  /*\n  Reference to the element holding the Quill editing area.\n  */\n  editingArea?: React.ReactInstance | null\n\n  /*\n  Tracks the internal value of the Quill editor\n  */\n  value: Value\n\n  /*\n  Tracks the internal selection of the Quill editor\n  */\n  selection: Range = null\n\n  /*\n  Used to compare whether deltas from `onChange` are being used as `value`.\n  */\n  lastDeltaChangeSet?: DeltaStatic\n\n  /*\n  Stores the contents of the editor to be restored after regeneration.\n  */\n  regenerationSnapshot?: {\n    delta: DeltaStatic,\n    selection: Range,\n  }\n\n  /*\n  A weaker, unprivileged proxy for the editor that does not allow accidentally\n  modifying editor state.\n  */\n  unprivilegedEditor?: UnprivilegedEditor\n\n  constructor(props: ReactQuillProps) {\n    super(props);\n    const value = this.isControlled()? props.value : props.defaultValue;\n    this.value = value ?? '';\n  }\n\n  validateProps(props: ReactQuillProps): void {\n    if (React.Children.count(props.children) > 1) throw new Error(\n      'The Quill editing area can only be composed of a single React element.'\n    );\n\n    if (React.Children.count(props.children)) {\n      const child = React.Children.only(props.children);\n      if (child?.type === 'textarea') throw new Error(\n        'Quill does not support editing on a <textarea>. Use a <div> instead.'\n      );\n    }\n\n    if (\n      this.lastDeltaChangeSet &&\n      props.value === this.lastDeltaChangeSet\n    ) throw new Error(\n      'You are passing the `delta` object from the `onChange` event back ' +\n      'as `value`. You most probably want `editor.getContents()` instead. ' +\n      'See: https://github.com/zenoamaro/react-quill#using-deltas'\n    );\n  }\n\n  shouldComponentUpdate(nextProps: ReactQuillProps, nextState: ReactQuillState) {\n    this.validateProps(nextProps);\n\n    // If the editor hasn't been instantiated yet, or the component has been\n    // regenerated, we already know we should update.\n    if (!this.editor || this.state.generation !== nextState.generation) {\n      return true;\n    }\n\n    // Handle value changes in-place\n    if ('value' in nextProps) {\n      const prevContents = this.getEditorContents();\n      const nextContents = nextProps.value ?? '';\n\n      // NOTE: Seeing that Quill is missing a way to prevent edits, we have to\n      //       settle for a hybrid between controlled and uncontrolled mode. We\n      //       can't prevent the change, but we'll still override content\n      //       whenever `value` differs from current state.\n      // NOTE: Comparing an HTML string and a Quill Delta will always trigger a\n      //       change, regardless of whether they represent the same document.\n      if (!this.isEqualValue(nextContents, prevContents)) {\n        this.setEditorContents(this.editor, nextContents);\n      }\n    }\n\n    // Handle read-only changes in-place\n    if (nextProps.readOnly !== this.props.readOnly) {\n      this.setEditorReadOnly(this.editor, nextProps.readOnly!);\n    }\n\n    // Clean and Dirty props require a render\n    return [...this.cleanProps, ...this.dirtyProps].some((prop) => {\n      return !isEqual(nextProps[prop], this.props[prop]);\n    });\n  }\n\n  shouldComponentRegenerate(nextProps: ReactQuillProps): boolean {\n    // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n    return this.dirtyProps.some((prop) => {\n      return !isEqual(nextProps[prop], this.props[prop]);\n    });\n  }\n\n  componentDidMount() {\n    this.instantiateEditor();\n    this.setEditorContents(this.editor!, this.getEditorContents());\n  }\n\n  componentWillUnmount() {\n    this.destroyEditor();\n  }\n\n  componentDidUpdate(prevProps: ReactQuillProps, prevState: ReactQuillState) {\n    // If we're changing one of the `dirtyProps`, the entire Quill Editor needs\n    // to be re-instantiated. Regenerating the editor will cause the whole tree,\n    // including the container, to be cleaned up and re-rendered from scratch.\n    // Store the contents so they can be restored later.\n    if (this.editor && this.shouldComponentRegenerate(prevProps)) {\n      const delta = this.editor.getContents();\n      const selection = this.editor.getSelection();\n      this.regenerationSnapshot = {delta, selection};\n      this.setState({generation: this.state.generation + 1});\n      this.destroyEditor();\n    }\n\n    // The component has been regenerated, so it must be re-instantiated, and\n    // its content must be restored to the previous values from the snapshot.\n    if (this.state.generation !== prevState.generation) {\n      const {delta, selection} = this.regenerationSnapshot!;\n      delete this.regenerationSnapshot;\n      this.instantiateEditor();\n      const editor = this.editor!;\n      editor.setContents(delta);\n      postpone(() => this.setEditorSelection(editor, selection));\n    }\n  }\n\n  instantiateEditor(): void {\n    if (this.editor) {\n      this.hookEditor(this.editor);\n    } else {\n      this.editor = this.createEditor(\n        this.getEditingArea(),\n        this.getEditorConfig()\n      );\n    }\n  }\n\n  destroyEditor(): void {\n    if (!this.editor) return;\n    this.unhookEditor(this.editor);\n  }\n\n  /*\n  We consider the component to be controlled if `value` is being sent in props.\n  */\n  isControlled(): boolean {\n    return 'value' in this.props;\n  }\n\n  getEditorConfig(): QuillOptions {\n    return {\n      bounds: this.props.bounds,\n      formats: this.props.formats,\n      modules: this.props.modules,\n      placeholder: this.props.placeholder,\n      readOnly: this.props.readOnly,\n      scrollingContainer: this.props.scrollingContainer,\n      tabIndex: this.props.tabIndex,\n      theme: this.props.theme,\n    };\n  }\n\n  getEditor(): Quill {\n    if (!this.editor) throw new Error('Accessing non-instantiated editor');\n    return this.editor;\n  }\n\n  /**\n  Creates an editor on the given element. The editor will be passed the\n  configuration, have its events bound,\n  */\n  createEditor(element: Element, config: QuillOptions) {\n    const editor = new Quill(element, config);\n    if (config.tabIndex != null) {\n      this.setEditorTabIndex(editor, config.tabIndex);\n    }\n    this.hookEditor(editor);\n    return editor;\n  }\n\n  hookEditor(editor: Quill) {\n    // Expose the editor on change events via a weaker, unprivileged proxy\n    // object that does not allow accidentally modifying editor state.\n    this.unprivilegedEditor = this.makeUnprivilegedEditor(editor);\n    // Using `editor-change` allows picking up silent updates, like selection\n    // changes on typing.\n    editor.on('editor-change', this.onEditorChange);\n  }\n\n  unhookEditor(editor: Quill) {\n    editor.off('editor-change', this.onEditorChange);\n  }\n\n  getEditorContents(): Value {\n    return this.value;\n  }\n\n  getEditorSelection(): Range {\n    return this.selection;\n  }\n\n  /*\n  True if the value is a Delta instance or a Delta look-alike.\n  */\n  isDelta(value: any): boolean {\n    return value && value.ops;\n  }\n\n  /*\n  Special comparison function that knows how to compare Deltas.\n  */\n  isEqualValue(value: any, nextValue: any): boolean {\n    if (this.isDelta(value) && this.isDelta(nextValue)) {\n      return isEqual(value.ops, nextValue.ops);\n    } else {\n      return isEqual(value, nextValue);\n    }\n  }\n\n  /*\n  Replace the contents of the editor, but keep the previous selection hanging\n  around so that the cursor won't move.\n  */\n  setEditorContents(editor: Quill, value: Value) {\n    this.value = value;\n    const sel = this.getEditorSelection();\n    if (typeof value === 'string') {\n      editor.setContents(editor.clipboard.convert(value));\n    } else {\n      editor.setContents(value);\n    }\n    postpone(() => this.setEditorSelection(editor, sel));\n  }\n\n  setEditorSelection(editor: Quill, range: Range) {\n    this.selection = range;\n    if (range) {\n      // Validate bounds before applying.\n      const length = editor.getLength();\n      range.index = Math.max(0, Math.min(range.index, length-1));\n      range.length = Math.max(0, Math.min(range.length, (length-1) - range.index));\n      editor.setSelection(range);\n    }\n  }\n\n  setEditorTabIndex(editor: Quill, tabIndex: number) {\n    if (editor?.scroll?.domNode) {\n      (editor.scroll.domNode as HTMLElement).tabIndex = tabIndex;\n    }\n  }\n\n  setEditorReadOnly(editor: Quill, value: boolean) {\n    if (value) {\n      editor.disable();\n    } else {\n      editor.enable();\n    }\n  }\n\n  /*\n  Returns a weaker, unprivileged proxy object that only exposes read-only\n  accessors found on the editor instance, without any state-modifying methods.\n  */\n  makeUnprivilegedEditor(editor: Quill) {\n    const e = editor;\n    return {\n      getHTML:      () => e.root.innerHTML,\n      getLength:    e.getLength.bind(e),\n      getText:      e.getText.bind(e),\n      getContents:  e.getContents.bind(e),\n      getSelection: e.getSelection.bind(e),\n      getBounds:    e.getBounds.bind(e),\n    };\n  }\n\n  getEditingArea(): Element {\n    if (!this.editingArea) {\n      throw new Error('Instantiating on missing editing area');\n    }\n    const element = ReactDOM.findDOMNode(this.editingArea);\n    if (!element) {\n      throw new Error('Cannot find element for editing area');\n    }\n    if (element.nodeType === 3) {\n      throw new Error('Editing area cannot be a text node');\n    }\n    return element as Element;\n  }\n\n  /*\n  Renders an editor area, unless it has been provided one to clone.\n  */\n  renderEditingArea(): JSX.Element {\n    const {children, preserveWhitespace} = this.props;\n    const {generation} = this.state;\n\n    const properties = {\n      key: generation,\n      ref: (instance: React.ReactInstance | null) => {\n        this.editingArea = instance\n      },\n    };\n\n    if (React.Children.count(children)) {\n      return React.cloneElement(\n        React.Children.only(children)!,\n        properties\n      );\n    }\n\n    return preserveWhitespace ?\n      <pre {...properties}/> :\n      <div {...properties}/>;\n  }\n\n  render() {\n    return (\n      <div\n        id={this.props.id}\n        style={this.props.style}\n        key={this.state.generation}\n        className={`quill ${this.props.className ?? ''}`}\n        onKeyPress={this.props.onKeyPress}\n        onKeyDown={this.props.onKeyDown}\n        onKeyUp={this.props.onKeyUp}\n      >\n        {this.renderEditingArea()}\n      </div>\n    );\n  }\n\n  onEditorChange = (\n    eventName: 'text-change' | 'selection-change',\n    rangeOrDelta: Range | DeltaStatic,\n    oldRangeOrDelta: Range | DeltaStatic,\n    source: Sources,\n  ) => {\n    if (eventName === 'text-change') {\n      this.onEditorChangeText?.(\n        this.editor!.root.innerHTML,\n        rangeOrDelta as DeltaStatic,\n        source,\n        this.unprivilegedEditor!\n      );\n    } else if (eventName === 'selection-change') {\n      this.onEditorChangeSelection?.(\n        rangeOrDelta as RangeStatic,\n        source,\n        this.unprivilegedEditor!\n      );\n    }\n  };\n\n  onEditorChangeText(\n    value: string,\n    delta: DeltaStatic,\n    source: Sources,\n    editor: UnprivilegedEditor,\n  ): void {\n    if (!this.editor) return;\n\n    // We keep storing the same type of value as what the user gives us,\n    // so that value comparisons will be more stable and predictable.\n    const nextContents = this.isDelta(this.value)\n      ? editor.getContents()\n      : editor.getHTML();\n\n    if (nextContents !== this.getEditorContents()) {\n      // Taint this `delta` object, so we can recognize whether the user\n      // is trying to send it back as `value`, preventing a likely loop.\n      this.lastDeltaChangeSet = delta;\n\n      this.value = nextContents;\n      this.props.onChange?.(value, delta, source, editor);\n    }\n  }\n\n  onEditorChangeSelection(\n    nextSelection: RangeStatic,\n    source: Sources,\n    editor: UnprivilegedEditor,\n  ): void {\n    if (!this.editor) return;\n    const currentSelection = this.getEditorSelection();\n    const hasGainedFocus = !currentSelection && nextSelection;\n    const hasLostFocus = currentSelection && !nextSelection;\n\n    if (isEqual(nextSelection, currentSelection)) return;\n\n    this.selection = nextSelection;\n    this.props.onChangeSelection?.(nextSelection, source, editor);\n\n    if (hasGainedFocus) {\n      this.props.onFocus?.(nextSelection, source, editor);\n    } else if (hasLostFocus) {\n      this.props.onBlur?.(currentSelection, source, editor);\n    }\n  }\n\n  focus(): void {\n    if (!this.editor) return;\n    this.editor.focus();\n  }\n\n  blur(): void {\n    if (!this.editor) return;\n    this.selection = null;\n    this.editor.blur();\n  }\n}\n\n/*\nSmall helper to execute a function in the next micro-tick.\n*/\nfunction postpone(fn: (value: void) => void) {\n  Promise.resolve().then(fn);\n}\n\n// Compatibility Export to avoid `require(...).default` on CommonJS.\n// See: https://github.com/Microsoft/TypeScript/issues/2719\nexport = ReactQuill;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}