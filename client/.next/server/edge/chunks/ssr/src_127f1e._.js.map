{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/OneDrive/Desktop/Next-Level-Technology/Assingment/Assingment6/client/src/config/envConfig.ts"],"sourcesContent":["export const envConfig = {\r\n  baseApi: process.env.NEXT_PUBLIC_BASE_API,\r\n  baseUrl: process.env.NEXT_PUBLIC_BASE_URL,\r\n};\r\n"],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IACvB,OAAO;IACP,OAAO;AACT"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/OneDrive/Desktop/Next-Level-Technology/Assingment/Assingment6/client/src/lib/axiosInstance/index.ts"],"sourcesContent":["import { envConfig } from \"@/src/config/envConfig\";\r\nimport axios from \"axios\";\r\nimport { cookies } from \"next/headers\";\r\n\r\n// Create the Axios instance\r\nconst axiosInstance = axios.create({\r\n  baseURL: envConfig.baseApi,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  function (config) {\r\n    const accessToken = cookies().get(\"accessToken\")?.value;\r\n    config.headers.Authorization = accessToken;\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"names":[],"mappings":";;;;;;;;;;;AAIA,4BAA4B;AAC5B,MAAM,gBAAgB,kOAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS,uNAAA,CAAA,YAAS,CAAC,OAAO;AAC5B;AAEA,cAAc,YAAY,CAAC,OAAO,CAAC,GAAG,CACpC,SAAU,MAAM;IACd,MAAM,cAAc,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,gBAAgB;IAClD,OAAO,OAAO,CAAC,aAAa,GAAG;IAC/B,OAAO;AACT,GACA,SAAU,KAAK;IACb,kCAAkC;IAClC,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/OneDrive/Desktop/Next-Level-Technology/Assingment/Assingment6/client/src/services/auth/index.ts"],"sourcesContent":["\"use server\";\r\nimport axiosInstance from \"@/src/lib/axiosInstance\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { cookies } from \"next/headers\";\r\nimport { FieldValues } from \"react-hook-form\";\r\n\r\nexport const userRegister = async (userData: FieldValues) => {\r\n  try {\r\n    const { data } = await axiosInstance.post(\"/auth/register\", userData);\r\n\r\n    if (data.success) {\r\n      cookies().set(\"accessToken\", data?.data?.accessToken);\r\n      cookies().set(\"refreshToken\", data?.data?.refreshToken);\r\n    }\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    throw new Error(error);\r\n  }\r\n};\r\nexport const userLogin = async (userData: FieldValues) => {\r\n  try {\r\n    const { data } = await axiosInstance.post(\"/auth/login\", userData);\r\n\r\n    if (data.success) {\r\n      cookies().set(\"accessToken\", data?.data?.accessToken);\r\n      cookies().set(\"refreshToken\", data?.data?.refreshToken);\r\n    }\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = async () => {\r\n  const accessToken = cookies().get(\"accessToken\")?.value;\r\n  let decodedToken = null;\r\n  if (accessToken) {\r\n    decodedToken = await jwtDecode(accessToken);\r\n  }\r\n  return {\r\n    _id: decodedToken?._id,\r\n    name: decodedToken?.name,\r\n    role: decodedToken?.role,\r\n    email: decodedToken?.email,\r\n    profilePhoto: decodedToken?.profilePhoto,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  cookies().delete(\"accessToken\");\r\n  cookies().delete(\"refreshToken\");\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAMO,MAAM,eAAe,OAAO;IACjC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,iOAAA,CAAA,UAAa,CAAC,IAAI,CAAC,kBAAkB;QAE5D,IAAI,KAAK,OAAO,EAAE;YAChB,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,eAAe,MAAM,MAAM;YACzC,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,gBAAgB,MAAM,MAAM;QAC5C;QAEA,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM;IAClB;AACF;AACO,MAAM,YAAY,OAAO;IAC9B,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,iOAAA,CAAA,UAAa,CAAC,IAAI,CAAC,eAAe;QAEzD,IAAI,KAAK,OAAO,EAAE;YAChB,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,eAAe,MAAM,MAAM;YACzC,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,gBAAgB,MAAM,MAAM;QAC5C;QAEA,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,iBAAiB;IAC5B,MAAM,cAAc,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,gBAAgB;IAClD,IAAI,eAAe;IACnB,IAAI,aAAa;QACf,eAAe,MAAM,CAAA,GAAA,mPAAA,CAAA,YAAS,AAAD,EAAE;IACjC;IACA,OAAO;QACL,KAAK,cAAc;QACnB,MAAM,cAAc;QACpB,MAAM,cAAc;QACpB,OAAO,cAAc;QACrB,cAAc,cAAc;IAC9B;AACF;AAEO,MAAM,SAAS;IACpB,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC;IACjB,CAAA,GAAA,mQAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC;AACnB"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/OneDrive/Desktop/Next-Level-Technology/Assingment/Assingment6/client/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { NextRequest } from \"next/server\";\r\nimport { getCurrentUser } from \"./services/auth\";\r\n\r\nconst AuthRoutes = [\"/login\", \"/register\"];\r\n\r\ntype Role = keyof typeof roleBasedRoutes;\r\n\r\nconst roleBasedRoutes = {\r\n  USER: [/^\\/profile/],\r\n  ADMIN: [/^\\/admin/],\r\n};\r\n\r\n// This function can be marked `async` if using `await` inside\r\nexport async function middleware(request: NextRequest) {\r\n  const { pathname } = request.nextUrl;\r\n  const user = await getCurrentUser();\r\n\r\n  if (!user) {\r\n    if (AuthRoutes.includes(pathname)) {\r\n      return NextResponse.next();\r\n    } else {\r\n      return NextResponse.redirect(new URL(\"/login\", request.url));\r\n    }\r\n  }\r\n\r\n  if (user?.role && roleBasedRoutes[user?.role as Role]) {\r\n    const routes = roleBasedRoutes[user?.role as Role];\r\n\r\n    if (routes.some((route) => pathname.match(route))) {\r\n      return NextResponse.next();\r\n    }\r\n  }\r\n\r\n  return NextResponse.redirect(new URL(\"/\", request.url));\r\n}\r\n\r\n// See \"Matching Paths\" below to learn more\r\nexport const config = {\r\n  matcher: [\"/admin/:page*\"],\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;AAIA,MAAM,aAAa;IAAC;IAAU;CAAY;AAI1C,MAAM,kBAAkB;IACtB,MAAM;QAAC;KAAa;IACpB,OAAO;QAAC;KAAW;AACrB;AAGO,eAAe,WAAW,OAAoB;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,OAAO,MAAM,CAAA,GAAA,6NAAA,CAAA,iBAAc,AAAD;IAEhC,IAAI,CAAC,MAAM;QACT,IAAI,WAAW,QAAQ,CAAC,WAAW;YACjC,OAAO,kRAAA,CAAA,eAAY,CAAC,IAAI;QAC1B,OAAO;YACL,OAAO,kRAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC5D;IACF;IAEA,IAAI,MAAM,QAAQ,eAAe,CAAC,MAAM,KAAa,EAAE;QACrD,MAAM,SAAS,eAAe,CAAC,MAAM,KAAa;QAElD,IAAI,OAAO,IAAI,CAAC,CAAC,QAAU,SAAS,KAAK,CAAC,SAAS;YACjD,OAAO,kRAAA,CAAA,eAAY,CAAC,IAAI;QAC1B;IACF;IAEA,OAAO,kRAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;AACvD;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAgB;AAC5B"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}